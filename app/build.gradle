apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.compileSdkVersion
    defaultConfig {
        applicationId "com.xpf.rxjavaretrofit2demo"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation "androidx.appcompat:appcompat:1.0.2"
    testImplementation 'junit:junit:4.12'
    implementation 'com.jakewharton:butterknife:10.1.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'
    implementation 'com.squareup.okhttp3:okhttp:3.12.0'
    implementation 'com.squareup.okio:okio:1.15.0'
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    implementation 'com.mcxiaoke.volley:library:1.0.19'
    implementation 'com.orhanobut:logger:2.2.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.4'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.0.0'

    implementation 'com.trello.rxlifecycle3:rxlifecycle:3.0.0'
    // If you want to bind to Android-specific lifecycles
    implementation 'com.trello.rxlifecycle3:rxlifecycle-android:3.0.0'
    // If you want pre-written Activities and Fragments you can subclass as providers
    implementation 'com.trello.rxlifecycle3:rxlifecycle-components:3.0.0'
    // If you want pre-written support preference Fragments you can subclass as providers
    implementation 'com.trello.rxlifecycle3:rxlifecycle-components-preference:3.0.0'
    // If you want to use Android Lifecycle for providers
    implementation 'com.trello.rxlifecycle3:rxlifecycle-android-lifecycle:3.0.0'
    // If you want to use Kotlin syntax
    implementation 'com.trello.rxlifecycle3:rxlifecycle-kotlin:3.0.0'
    // If you want to use Kotlin syntax with Android Lifecycle
    implementation 'com.trello.rxlifecycle3:rxlifecycle-android-lifecycle-kotlin:3.0.0'
    // If you want to use Navi for providers
    // DEPRECATED: Use rxlifecycle-android-lifecycle instead. This will be removed in a future release.
    implementation 'com.trello.rxlifecycle3:rxlifecycle-navi:3.0.0'

    // Uber AutoDispose
    // Java:
//    implementation 'com.uber.autodispose:autodispose:1.3.0'
//    // LifecycleScopeProvider:
//    implementation 'com.uber.autodispose:autodispose-lifecycle:1.3.0'
//    // Android extensions:
//    implementation 'com.uber.autodispose:autodispose-android:1.3.0'
//    // Android Architecture Components extensions:
//    implementation 'com.uber.autodispose:autodispose-android-archcomponents:1.3.0'
//    // Android Architecture Components Test extensions:
//    implementation 'com.uber.autodispose:autodispose-android-archcomponents-test:1.3.0'
//    // autodispose-rxlifecycle
//    implementation 'com.uber.autodispose:autodispose-rxlifecycle:1.3.0'
//    // autodispose-rxlifecycle3
//    implementation 'com.uber.autodispose:autodispose-rxlifecycle3:1.3.0'

    implementation project(':retrofit-library')
}
